name: Node.js CI

on:
  push:
    branches: [ '**' ]
    tags: [ '**' ]
  release:
    types: [ 'created' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12
        registry-url: 'https://registry.npmjs.org'
    - name: Install Dependencies
      run: npm install

    # All the below are deploy-related steps
    - name: Extract Branch Name
      id: branch_name
      if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
      run: echo ::set-output name=BRANCH_NAME::${GITHUB_REF/refs\/heads\//}

    - name: Extract Tag Name
      id: tag_name
      if: github.event_name == 'release' || contains(github.ref, 'refs/tags')
      run: echo ::set-output name=TAG_NAME::${GITHUB_REF/refs\/tags\//}

    - name: Build for Distribution
      uses: GabrielBB/xvfb-action@v1.0
      with:
        run: npm run dist

    # Examples:
    # 1) PR feature/acme merged into dev
    # 2) branch A merged into branch B
    # 3) branch A pushed directly to git
    - name: Deploy Non-Tag Branches
      uses: jakejarvis/s3-sync-action@master
      if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=60"
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET || 'pixi-filters' }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-west-1'
        SOURCE_DIR: 'dist'
        DEST_DIR: ${{ steps.branch_name.outputs.BRANCH_NAME }}

    # Release is published and deployed into s3://bucket-name/v5.2.2/
    - name: Deploy Released Branches
      uses: jakejarvis/s3-sync-action@master
      if: (github.event_name == 'release' || contains(github.ref, 'refs/tags'))
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=2592000"
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET || 'pixi-filters' }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-west-1'
        SOURCE_DIR: 'dist'
        DEST_DIR: ${{ steps.tag_name.outputs.TAG_NAME }}

    # Same release from previous deployed into s3://bucket-name/latest/
    - name: Deploy Latest Release
      uses: jakejarvis/s3-sync-action@master
      if: (github.event_name == 'release' || contains(github.ref, 'refs/tags'))
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=1209600"
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET || 'pixi-filters' }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-west-1'
        SOURCE_DIR: 'dist'
        DEST_DIR: 'latest'
    
    # Publish to NPM
    - name: Publish Latest Release
      if: (github.event_name == 'release' || contains(github.ref, 'refs/tags'))
      run: npm run publish-ci
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}